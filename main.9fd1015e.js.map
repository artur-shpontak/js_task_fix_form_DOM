{"version":3,"sources":["scripts/main.js"],"names":["Label","id","inputName","newLabel","document","createElement","className","htmlFor","textContent","createSpacesBetweenWords","char","index","toUpperCase","formatString","string","split","map","join","fields","querySelectorAll","field","input","name","slice","placeholder","inputLabel","before"],"mappings":";AAAA,aAwCC,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAtCKA,IAAAA,EACJ,SAAYC,EAAAA,EAAIC,GAAW,EAAA,KAAA,GACnBC,IAAAA,EAAWC,SAASC,cAAc,SAMjCF,OAJPA,EAASG,UAAY,cACrBH,EAASI,QAAUN,EACnBE,EAASK,YAAcN,EAEhBC,GAILM,EAA2B,SAACC,EAAMC,GAClCD,OAAAA,IAASA,EAAKE,eAAiBD,EAAQ,EAC9BD,IAAAA,OAAAA,GAGNA,GAGT,SAASG,EAAaC,GACbA,OAAAA,EACJC,MAAM,IACNC,IAAIP,GACJQ,KAAK,IAGV,IAWC,EAXKC,EAAad,EAAAA,SAASe,iBAAiB,gBAEzBD,EAAAA,EAAAA,GASnB,IAT2B,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAjBE,IAAAA,EAAiB,EAAA,MACpBC,EAAQD,EACRlB,EAAYmB,EAAMC,KAAK,GAAGV,cAAgBS,EAAMC,KAAKC,MAAM,GAEjEF,EAAMG,YAAcX,EAAaX,GAE3BuB,IAAAA,EAAa,IAAIzB,EAAMqB,EAAMpB,GAAIC,GAEvCkB,EAAMM,OAAOD,EAAYJ,IAC1B,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA","file":"main.9fd1015e.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nclass Label {\n  constructor(id, inputName) {\n    const newLabel = document.createElement('label');\n\n    newLabel.className = 'field-label';\n    newLabel.htmlFor = id;\n    newLabel.textContent = inputName;\n\n    return newLabel;\n  }\n}\n\nconst createSpacesBetweenWords = (char, index) => {\n  if (char === char.toUpperCase() && index > 0) {\n    return ` ${char}`;\n  }\n\n  return char;\n};\n\nfunction formatString(string) {\n  return string\n    .split('')\n    .map(createSpacesBetweenWords)\n    .join('');\n}\n\nconst fields = [...document.querySelectorAll('.field-text')];\n\nfor (const field of fields) {\n  const input = field;\n  const inputName = input.name[0].toUpperCase() + input.name.slice(1);\n\n  input.placeholder = formatString(inputName);\n\n  const inputLabel = new Label(input.id, inputName);\n\n  field.before(inputLabel, input);\n}\n"]}